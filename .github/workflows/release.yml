# .github/workflows/release.yml
name: Automatic Versioning and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # This gives the GITHUB_TOKEN permission to push tags and releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
         
      - name: Set up Git for tagging
        run: |
          git config --global user.name "FazakasAbel"
          git config --global user.email "fazakas.abel@gmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Install semver
        run: |
          npm install -g semver
      
      - name: Determine semantic version
        id: version
        run: |
          # Extract the latest tag, or set an initial version if no tags are found
          LATEST_TAG=${{ steps.previoustag.outputs.tag }}
          
          # Get the latest commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          CHANGE_LEVEL="patch"
          # Determine the new version based on the commit message
          if [[ $COMMIT_MSG =~ "MAJOR" ]]; then
            CHANGE_LEVEL="major"
          elif [[ $COMMIT_MSG =~ "MINOR" ]]; then
            CHANGE_LEVEL="minor"
          fi

          # Create the new version
          NEW_VERSION=$(semver -i ${CHANGE_LEVEL} ${LATEST_TAG})
          echo "New version is $NEW_VERSION"
          echo "::set-output name=new_version::$NEW_VERSION"
      - name: Create Git tag
        run: |
          NEW_VERSION=${{ steps.version.outputs.new_version }}
          git tag $NEW_VERSION
          git push origin $NEW_VERSION

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
